library("swirl")
swirl()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555,z)
z*2 + 100
mysqrt <- sqrt(z-1)
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char("My", "name","is")
my_char <- "My", "name","is"
my_char <- c("My", "name","is")
my_char
paste(my_char, collapse=" ")
my_name <- c(paste(my_char, collapse=" "), "Sunil Kr. Singh")
my_name <- c(my_char, "Sunil")
my_name
paste(my_name, collapse=" ")
paste ("Hello", "World!", sep=" ")
paste ("Hello", "world!", sep=" ")
paste (1:3, c("X", "Y", "Z"), sep="")
paste (LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep (NA, 1000)
myData <- sample (c(y,z), 100)
myNa <- myData.is.na()
myNa <- is.na(myData)
myNA <- is.na(myData)
myNa
myNA
myData==NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical (vect, vect2)
vect["bar"]
vect[c("foo",  "bar")]
myVector <- c(1:20)
myVector <- 1:20
myVector
dim(myVector)
length(myVector())
length(myVector)
dim(myVector) <- dim(4,5)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
matrix(1:20, rows=4, cols=5)
?matrix
matrix(1:20, nrow=4, ncol=5)
myMatrix <- matrix(1:20, nrow=4, ncol=5)
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
Identical (myMatrix, myMatrix2)
identical (myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData, cnames)
colnames(cnames, myData)
?colnames
colnames(myData, do.NULL=TRUE,prefix="col")
colnames(myData) <- cnames
myData
swirl()
bye()
quit()
swirl()
library("swirl")
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste (my_char, collapse = " ")
my_name <- c(my_char, "sunil")
my_name
paste(my_name, collapse = " ")
paste ("Hello" , "world", sep=" ")
paste ("Hello" , "world!", sep=" ")
paste(1:3, c("X", "Y", "Z")
}
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste (LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm (1000)
z <- rep(NA, 1000)
?sample
sample(c(y,z), 100)
myData <- sample(c(y,z), 100)
myNA <- myData.is.na()
myNA <- is.na(myData)
myNa
myNA
myData==NA
sum(myNA, TRUE)
sum(myNA)
myData
0/0
Inf - Inf
bye()
quit()
library("swirl")
swirl()
bye()
swilr()
library("swirl"0
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x [!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x [ c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names (vect2) <- c("foo", "bar", "norf")
identical(vect1, vect2)
identical(vect, vect2)
vect ["bar"]
vect[c("foo", "bar")]
bye()
quit()
library("swirl")
swirl()
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(my
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age","weight","bp", "rating", "test")
colnames(myData,cnames)
colnames(myData) <- cnames
myData
bye()
quit()
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
q()
e <- new.env()
e
quit()
search()
as.environment()
as.environment("package:stats")
quit()
rnorm(10)
runif(10)
gl(3,10)
?gl
quit()
library(datasets)
data(iris)
?iris
names iris
iris
names(iris)
iris$Species
subset(iris,iris$Species=="virginica")
subset(iris,iris$Species=="virginica")
?sapply
lapply(subset(iris,iris$Species=="virginica"), mean, iris[,1])
lapply(subset(iris,iris$Species=="virginica"), mean, iris[["SepalLenght"]])
lapply(subset(iris,iris$Species=="virginica"), mean, iris[["SepalLenght"]])
lapply(subset(iris,iris$Species=="virginica"), mean, iris[["Sepal.Lenght"]])
lapply(subset(iris,iris$Species=="virginica"), mean, iris[["Sepal.Length"]])
lapply(subset(iris,iris$Species=="virginica"), mean, iris[["Sepal.Length"]])
iris
iris[[Sepal.Length]]
iris[["Sepal.Length"]]
lapply(subset(iris,iris$Species=="virginica"), mean, iris[["Sepal.Length"]])
?mean
x <- subset(iris,iris$Species=="virginica")
x
mean(x[["Sepal.Length"]])
colMeans(iris)
apply(iris[, 1:4], 2, mean)
data(mtcars)
mtcars
names(mtcars)
?tapply
x <- mtcars[[mtcars$cyl==4]]
x <- mtcars[[mtcars$cyl]]
x <- subset(mtcars, mtcars$cyl==4)
x
mean (x, x[["mpg"]])
mean (x[["mpg"]])
tapply(mtcars$mpg, mtcars$cyl, mean)
quit()
debug(ls)
next
break
break()
help()
break()
next()
next
quit()
end
n
n
n
n
q
q
q
break
c
quit()
c
q()
set.seed(1)
rpois(5,2)
?rpois
quit()
set.seed(1)
rpois(5, 2)
?seed
??seed
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
q()
q()
quit()
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL",type="source")
quit()
install.packages("RMySQL",type="source")
?sqldf
install.packages("sqldf")
?sqldf
??sqldf
quit()
?xyplot
library(lattice)
?xyplot
library(datasets)
airquality<-transform(airquality, Month=factor(Month))
xyplot(Ozone~Wind | Month, data=airquality)
xyplot(Ozone~Wind | Month, data=airquality,layout=c(5,1))
set.seed(10)
x<-rnorm(100)
x
hist(x)
f<-rep(0:1, each=50)
f
y<-x+f-f*x+rnorm(100,sd=0.5)
y
hist(y)
f<-factor(f, labesl=c("Group 1", "Group 2"))
f<-factor(f, labels=c("Group 1", "Group 2"))
f
xyplot(y~x|f)
xyplot(y~x|f, panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=median(y), lty=2)
})
panel.abline(h=median(y), lty=6)
?qplot
library(ggplot2)
?qplot
quit()
install.packages("rmarkdown")
knitr
packages
knitr
install.packages ("knitr")
getwd()
q()
iris
names iris
names "iris"
pairs (iris[1:4])
dim (iris)
names iris
summary iris
names(iris)
quit()
setwd("C:/Technology/Education/eduo/coursera/Data Science/Reproducible Research/Week_1")
